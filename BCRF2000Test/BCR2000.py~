
MIDI_CHANNEL = 1

class bcr2000:
    
    def __init__(self):

         #Column 1 (Left)
        self.main_encoders.append([])
        self.main_encoders[0].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 81))
        self.main_encoders[0].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 89))
        self.main_encoders[0].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 97))
        
        #Column 2
        self.main_encoders.append([])
        self.main_encoders[1].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 82))
        self.main_encoders[1].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 90))
        self.main_encoders[1].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 98))

        #Column 3
        self.main_encoders.append([])
        self.main_encoders[2].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 83))
        self.main_encoders[2].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 91))
        self.main_encoders[2].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 99))

        #Column 4
        self.main_encoders.append([])
        self.main_encoders[3].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 84))
        self.main_encoders[3].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 92))
        self.main_encoders[3].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 100))

        #Column 5
        self.main_encoders.append([])
        self.main_encoders[4].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 85))
        self.main_encoders[4].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 93))
        self.main_encoders[4].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 101))
        
        #Column 6
        self.main_encoders.append([])
        self.main_encoders[5].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 86))
        self.main_encoders[5].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 94))
        self.main_encoders[5].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 102))
        
        #Column 7
        self.main_encoders.append([])
        self.main_encoders[6].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 87))
        self.main_encoders[6].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 95))
        self.main_encoders[6].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 103))

        #Column 8
        self.main_encoders.append([])
        self.main_encoders[7].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 88))
        self.main_encoders[7].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 96))
        self.main_encoders[7].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 104))
        
        #top row buttons, Track Enable Buttons#                                                                                                                                                                  
        self.buttons.append([])
        self.buttons[1].append(ButtonElement(False, MIDI_CC_TYPE, MIDI_CHANNEL, 40))
        self.buttons[1].append(ButtonElement(False, MIDI_CC_TYPE, MIDI_CHANNEL, 41))
        self.buttons[1].append(ButtonElement(False, MIDI_CC_TYPE, MIDI_CHANNEL, 42))
        self.buttons[1].append(ButtonElement(False, MIDI_CC_TYPE, MIDI_CHANNEL, 43))
        self.buttons[1].append(ButtonElement(False, MIDI_CC_TYPE, MIDI_CHANNEL, 44))
        self.buttons[1].append(ButtonElement(False, MIDI_CC_TYPE, MIDI_CHANNEL, 45))
        self.buttons[1].append(ButtonElement(False, MIDI_CC_TYPE, MIDI_CHANNEL, 46))
        self.buttons[1].append(ButtonElement(False, MIDI_CC_TYPE, MIDI_CHANNEL, 47))

        #bottom row buttons, Record Buttons#                                                                                                                                                                     
        self.buttons.append([])
        self.buttons[2].append(ButtonElement(True, MIDI_CC_TYPE, MIDI_CHANNEL, 48))
        self.buttons[2].append(ButtonElement(True, MIDI_CC_TYPE, MIDI_CHANNEL, 49))
        self.buttons[2].append(ButtonElement(True, MIDI_CC_TYPE, MIDI_CHANNEL, 50))
        self.buttons[2].append(ButtonElement(True, MIDI_CC_TYPE, MIDI_CHANNEL, 51))
        self.buttons[2].append(ButtonElement(True, MIDI_CC_TYPE, MIDI_CHANNEL, 52))
        self.buttons[2].append(ButtonElement(True, MIDI_CC_TYPE, MIDI_CHANNEL, 53))
        self.buttons[2].append(ButtonElement(True, MIDI_CC_TYPE, MIDI_CHANNEL, 54))
        self.buttons[2].append(ButtonElement(True, MIDI_CC_TYPE, MIDI_CHANNEL, 55))

        #bottom buttons, purpose TBD#                                                                                                                                                                           
        self.buttons.append([])
        self.buttons[3].append(ButtonElement(True, MIDI_CC_TYPE, MIDI_CHANNEL, 89))
        self.buttons[3].append(ButtonElement(True, MIDI_CC_TYPE, MIDI_CHANNEL, 90))
        self.buttons[3].append(ButtonElement(True, MIDI_CC_TYPE, MIDI_CHANNEL, 91))
        self.buttons[3].append(ButtonElement(True, MIDI_CC_TYPE, MIDI_CHANNEL, 92))
    
        #first encoder group
        self.encoders.append([])
        self.encoders[4].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 1))
        self.encoders[4].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 2))
        self.encoders[4].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 3))
        self.encoders[4].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 4))
        self.encoders[4].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 5))
        self.encoders[4].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 6))
        self.encoders[4].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 7))
        self.encoders[4].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 8))

        #second encoder group
        self.encoders.append([])
        self.encoders[5].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 9))
        self.encoders[5].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 10))
        self.encoders[5].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 11))
        self.encoders[5].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 12))
        self.encoders[5].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 13))
        self.encoders[5].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 14))
        self.encoders[5].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 15))
        self.encoders[5].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 16))
        
        #third encoder group
        self.encoders.append([])
        self.encoders[6].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 17))
        self.encoders[6].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 18))
        self.encoders[6].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 19))
        self.encoders[6].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 20))
        self.encoders[6].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 21))
        self.encoders[6].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 22))
        self.encoders[6].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 23))
        self.encoders[6].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 24))

        #fourth encoder group
        self.encoders.append([])
        self.encoders[7].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 17))
        self.encoders[7].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 18))
        self.encoders[7].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 19))
        self.encoders[7].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 20))
        self.encoders[7].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 21))
        self.encoders[7].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 22))
        self.encoders[7].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 23))
        self.encoders[7].append(EncoderElement(MIDI_CC_TYPE, MIDI_CHANNEL, 24))
